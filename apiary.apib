FORMAT: 1Ahttp://docs.tikebit.apiary.io/
HOST: https://api.tikebit.com/v1

# Tikebit™
![Tikebit™ Ecosystem](https://www.tikebit.com/assets/images/merchants-icon-tikebit-api-schema.svg)
Get cryptocurrencies in thousand of retail stores!

**[Tikebit™](http://www.tikebit.com)** is a easy and fast way to get cryptocurrencies with cash in thousand of retail stores around the world. Without banks, credit cards, in seconds.

Easy, fast, secure, private.

# Group Reseller
This methods are available for **resellers** accounts.

## Voucher [/reseller/voucher/]

### Create a voucher [POST]

Create a voucher.

+ Attributes
    + currency_iso_code: EUR (string, required)
        Only ***EUR*** is available at this moment.
    + description: Extra info (string, required)
        **Max length:** 250.
    + amount: `5000` (number, required)
    
        **Min:** 100
        
        **Max:** 10000
        
        The total amount of voucher. In cents.

+ Request
    + Headers

            Authorization: Basic ABC123

    + Body
        
            {
                "currency_iso_code": "EUR",
                "description": "RetailStore: 225",
                "amount": 5000
            }
    
    + Schema
    
            {
                "type": "object",
                "properties": {
                    "currency_iso_code": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "amount": {
                        "type": "number"
                    }
                }
            }


+ Response 201 (application/json)
The voucher was created successfully.

    + Body

            {
                "serial": "7171BA",
                "voucher_code": "1234123412341234",
                "amount": 5000,
                "balance": 5000,
                "description": "Extra information",
                "currency_iso_code": "EUR",
                "creation_date": 1462470670,
                "expiration_date": 1494006670
            }
        
    + Schema
    
            {
                "type": "object",
                "properties": {
                    "serial": {
                        "type": "string"
                    },
                    "voucher_code": {
                        "type": "string"
                    },
                    "amount": {
                        "type": "number"
                    },
                    "balance": {
                        "type": "number"
                    },
                    "description": {
                        "type": "string"
                    },
                    "currency_iso_code": {
                        "type": "string"
                    },
                    "creation_date": {
                        "type": "timestamp"
                    },
                    "expiration_date": {
                        "type": "timestamp"
                    }
                }
            }
        
+ Response 400 (application/json)
Bad request. Check params. Posible errors:
    
    code     | message
    -------- | --------
    MISSING  | Field is required
    INVALID  | Invalid characters

            Example of "Bad request"
            {
                "status": "validation failed",
                "errors": [
                    {
                        "field": "{FIELD}",
                        "code": "{CODE}",
                        "message": "{MESSAGE}"
                    }
                ]
            }

    + Body

            {
                "status": "validation failed",
                "errors": [
                    {
                        "field": "username",
                        "code": "MISSING",
                        "message": "Field is required"
                    }
                ]
            }
            
    + Schema

            {
                "type": "object",
                "properties": {
                    "status": {
                        "type": "string"
                    },
                    "errors": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "field": {
                                    "type": "string"
                                },
                                "code": {
                                    "type": "string"
                                },
                                "message": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        
+ Response 401 (application/json)
Forbidden. Check Auth credentials.

    + Headers

            WWW-Authenticate: Basic realm="reseller"

    + Body
    
            {
                "status": "unauthorized",
                "message": "Invalid username/password"
            }
            
    + Schema

            {
                "type": "object",
                "properties": {
                    "status": {
                        "type": "string"
                    },
                    "message": {
                        "type": "string"
                    }
                }
            }
        
+ Response 500 (application/json)
Internal Server Error. Try later.

    + Body
    
            {
                "status": "internal server error"
            }
            
    + Schema

            {
                "type": "object",
                "properties": {
                    "status": {
                        "type": "string"
                    }
                }
            }
        
+ Response 503 (application/json)
Service Unavailable. Try later.

    + Body
    
            {
                "status": "service unavailable"
            }
    
    + Schema

            {
                "type": "object",
                "properties": {
                    "status": {
                        "type": "string"
                    }
                }
            }
        

### Cancel a voucher [DELETE /reseller/voucher/{voucher_code}/]

Cancel a voucher. It can only be cancelled until 10 minutes after it was created. It is useful when a merchant creates a wrong voucher and he wants to cancel it immediately.

+ Parameters
    + voucher_code (required, int) ... Unique 16 digits long PIN code.

+ Request

    + Headers

            Authorization: Basic ABC123


+ Response 204 (application/json)
The voucher was cancelled successfully.

    + Body
    
+ Response 400 (application/json)
Bad request. Check params. Posible errors:
    
    code     | message
    -------- | --------
    MISSING  | Field is required
    INVALID  | Invalid characters

            Example of "Bad request"
            {
                "status": "validation failed",
                "errors": [
                    {
                        "field": "{FIELD}",
                        "code": "{CODE}",
                        "message": "{MESSAGE}"
                    }
                ]
            }

    + Body

            {
                "status": "validation failed",
                "errors": [
                    {
                        "field": "username",
                        "code": "MISSING",
                        "message": "Field is required"
                    }
                ]
            }
            
    + Schema

            {
                "type": "object",
                "properties": {
                    "status": {
                        "type": "string"
                    },
                    "errors": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "field": {
                                    "type": "string"
                                },
                                "code": {
                                    "type": "string"
                                },
                                "message": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }

+ Response 401 (application/json)
Forbidden. Check Auth credentials.

    + Headers

            WWW-Authenticate: Basic realm="reseller"

    + Body
    
            {
                "status": "unauthorized",
                "message": "Invalid username/password"
            }
            
    + Schema

            {
                "type": "object",
                "properties": {
                    "status": {
                        "type": "string"
                    },
                    "message": {
                        "type": "string"
                    }
                }
            }

+ Response 403 (application/json)
Forbidden. The voucher was used before and can't be canceled.

    + Body
    
            {
                "status": "forbidden",
                "message": "Used voucher"
            }
            
    + Schema

            {
                "type": "object",
                "properties": {
                    "status": {
                        "type": "string"
                    },
                    "message": {
                        "type": "string"
                    }
                }
            }

+ Response 404 (application/json)
Not Found. Active voucher not found.

    + Body
    
            {
                "status": "not found",
                "message": "Voucher not found"
            }
            
    + Schema

            {
                "type": "object",
                "properties": {
                    "status": {
                        "type": "string"
                    },
                    "message": {
                        "type": "string"
                    }
                }
            }

+ Response 500 (application/json)
Internal Server Error. Try later.

    + Body
    
            {
                "status": "internal server error"
            }
            
    + Schema

            {
                "type": "object",
                "properties": {
                    "status": {
                        "type": "string"
                    }
                }
            }

+ Response 503 (application/json)
Service Unavailable. Try later.

    + Body
    
            {
                "status": "service unavailable"
            }
            
    + Schema

            {
                "type": "object",
                "properties": {
                    "status": {
                        "type": "string"
                    }
                }
            }


# Group Merchant
This methods are available for **merchant** accounts.

## Payment [/merchant/payment/]

### Create a payment [POST]

Create a payment for a voucher.


+ Attributes (object)
    + voucher_code: `1234123412341234` (required, string)
        Unique 16 digits long PIN code.
    + currency_iso_code: `EUR` (string, required)
        Only ***EUR*** is available at this moment.
    + nonce: `random123` (string, required)
        **Max length:** 250. Must be allways a unique string.
    + description: `Extra info` (string, required)
        **Max length:** 250.
    + amount: 5000 (number, required)
        
        **Min:** 100
        
        **Max:** 10000
        
        The total amount of voucher. In cents.

+ Request

    + Headers

            Authorization: Basic ABC123

    + Body
    
            {
                "voucher_code": "1234123412341234",
                "currency_iso_code": "EUR",
                "nonce": "random123",
                "description": "Bit2Me.com - 1€ in bitcoins: REF445588",
                "amount": 100
            }
        
    + Schema

            {
                "type": "object",
                "properties": {
                    "voucher_code": {
                        "type": "string"
                    },
                    "currency_iso_code": {
                        "type": "string"
                    },
                    "nonce": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "amount": {
                        "type": "number"
                    }
                }
            }        
        

+ Response 201 (application/json)
The payment was created successfully.

    + Body
    
            {
                "currency_iso_code": "EUR",
                "nonce": "random123",
                "amount": 100,
                "description": "Bit2Me.com - 1€ in bitcoins: REF445588",
                "creation_date": 1462470876
            }
            
    + Schema

            {
                "type": "object",
                "properties": {
                    "currency_iso_code": {
                        "type": "string"
                    },
                    "nonce": {
                        "type": "string"
                    },
                    "amount": {
                        "type": "number"
                    },
                    "description": {
                        "type": "string"
                    },
                    "creation_date": {
                        "type": "timestamp"
                    }
                }
            }
    
+ Response 400 (application/json)
Bad request. Check params. Posible errors:

    code     | message
    -------- | --------
    MISSING  | Field is required
    INVALID  | Invalid characters
    INVALID  | Payment amount is greater than voucher balance
    INVALID  | This reference was used before

            Example of "Bad request"
            {
                "status": "validation failed",
                "errors": [
                    {
                        "field": "{FIELD}",
                        "code": "{CODE}",
                        "message": "{MESSAGE}"
                    }
                ]
            }

    + Body

            {
                "status": "validation failed",
                "errors": [
                    {
                        "field": "username",
                        "code": "MISSING",
                        "message": "Field is required"
                    }
                ]
            }
            
    + Schema

            {
                "type": "object",
                "properties": {
                    "status": {
                        "type": "string"
                    },
                    "errors": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "field": {
                                    "type": "string"
                                },
                                "code": {
                                    "type": "string"
                                },
                                "message": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
            

+ Response 401 (application/json)
Forbidden. Check Auth credentials.

    + Headers

            WWW-Authenticate: Basic realm="merchant"

    + Body
    
            {
                "status": "unauthorized",
                "message": "Invalid username/password"
            }

    + Schema

            {
                "type": "object",
                "properties": {
                    "status": {
                        "type": "string"
                    },
                    "message": {
                        "type": "string"
                    }
                }
            }

+ Response 404 (application/json)
Not Found. Active voucher not found.

    + Body
    
            {
                "status": "not found",
                "message": "Voucher not found"
            }
            
    + Schema

            {
                "type": "object",
                "properties": {
                    "status": {
                        "type": "string"
                    },
                    "message": {
                        "type": "string"
                    }
                }
            }

+ Response 500 (application/json)
Internal Server Error. Try later.

    + Body
    
            {
                "status": "internal server error"
            }
            
    + Schema

            {
                "type": "object",
                "properties": {
                    "status": {
                        "type": "string"
                    }
                }
            }
            
+ Response 503 (application/json)
Service Unavailable. Try later.

    + Body
    
            {
                "status": "service unavailable"
            }
            
    + Schema

            {
                "type": "object",
                "properties": {
                    "status": {
                        "type": "string"
                    }
                }
            }