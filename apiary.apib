FORMAT: 1Ahttp://docs.tikebit.apiary.io/
HOST: https://api.tikebit.com/v1

# Tikebit™ - v1
![Tikebit™ Ecosystem](https://www.tikebit.com/assets/images/merchants-icon-tikebit-api-schema.svg)
Get cryptocurrencies in thousand of retail stores!

**[Tikebit™](http://www.tikebit.com)** is an easy and fast way to get cryptocurrencies with cash in thousand of retail stores around the world. Without banks, credit cards, in seconds.

Easy, fast, secure, private.

# Group Reseller
Those methods are available for **resellers** accounts.

## Voucher

Those methods allows create a voucher (2 steps) and cancel a voucher.

### Create a voucher [POST /reseller/voucher/]

Create a voucher. After the creation you need activate the voucher.
**CAUTION:** If you don't activate the voucher, the voucher not will be usable.

+ Attributes
    + amount: `5000` (number, required)
        **Min:** 100 | **Max:** 10000
        
        The total amount of voucher. In cents.
        
    + currency_iso_code: `EUR` (string, required)
        Only ***EUR*** is available at this moment.
        
    + reference: `Unique ID` (string)
        **Max length:** 100.
        
        Optional. If is sent, must be an unique string.
        
    
+ Request
    + Headers

            Authorization: Basic ABC123

    + Body
        
            {
                "amount": 5000,
                "currency_iso_code": "EUR",
                "reference": "MyCustomAndInternalID"
            }
    
    + Schema
    
            {
                "type": "object",
                "properties": {
                    "amount": {
                        "type": "number"
                    },
                    "currency_iso_code": {
                        "type": "string"
                    },
                    "reference": {
                        "type": "string"
                    }
                }
            }


+ Response 201 (application/json)
The voucher was created successfully.

    + Body

            {
                "id": "3a480a17-de11-4432-b2c9-b3d06c27baa18",
                "serial": "7171BA",
                "creation_timestamp": 1462470670,
                "expiration_timestamp": 1494006670,
                "voucher_code": "1234123412341234",
                "amount": 5000,
                "balance": 5000,
                "currency_iso_code": "EUR",
                "reference": "MyCustomAndInternalID"
            }
        
    + Schema
    
            {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "serial": {
                        "type": "string"
                    },
                    "creation_timestamp": {
                        "type": "timestamp"
                    },
                    "expiration_timestamp": {
                        "type": "timestamp"
                    },
                    "voucher_code": {
                        "type": "string"
                    },
                    "amount": {
                        "type": "number"
                    },
                    "balance": {
                        "type": "number"
                    },
                    "currency_iso_code": {
                        "type": "string"
                    },
                    "reference": {
                        "type": "string"
                    }
                }
            }
       
+ Response 400 (application/json)
Bad request.

    Posible messages             |
    -----------------------------|
    The voucher reference was already used    |

    + Body

            {
                "code": "BadRequest",
                "message": "{message}"
            }
            
    + Schema

            {
                "type": "object",
                "properties": {
                    "code": {
                        "type": "string"
                    },
                    "message": {
                        "type": "string"
                    }
                }
            }

+ Response 401 (application/json)
Forbidden. Check Auth credentials.

    + Headers

            WWW-Authenticate: Basic realm="reseller"

    + Body
    
            {
                "code": "Unauthorized",
                "message": "Invalid username/password"
            }
            
    + Schema

            {
                "type": "object",
                "properties": {
                    "code": {
                        "type": "string"
                    },
                    "message": {
                        "type": "string"
                    }
                }
            }
        
+ Response 409 (application/json)
Conflict. Invalid argument. 
The error information will be as Object (key, value), where the key is the param name with the error and the value is an explanation of what was wrong. 
You can get multiple errors inside the *errors* object.

    type     | reason
    -------- | --------
    MISSING  | Field is required
    INVALID  | Invalid characters
    INVALID  | Invalid number
    INVALID  | Invalid integer

    + Body
    
            {
              "code": "InvalidArgument",
              "message": "Validation failed",
              "errors": {
                "{{param}}": {
                  "type": "{{type}}",
                  "reason": "{{reason}}"
                }
              }
            }
            
    + Schema

            {
                "type": "object",
                "properties": {
                    "code": {
                        "type": "string"
                    },
                    "message": {
                        "type": "string"
                    },
                    "errors": {
                        "type": "object",
                        "properties": {
                            "{{param}}": {
                                "type": "object",
                                "properties": {
                                    "type": {
                                        "type": "string"
                                    },
                                    "reason": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        
+ Response 500 (application/json)
Internal Server Error. Contact with Tikebit.

    + Body
    
            {
                "code": "InternalServerError",
                "message": "Some critical error has occurred"
            }
            
    + Schema

            {
                "type": "object",
                "properties": {
                    "code": {
                        "type": "string"
                    },
                    "message": {
                        "type": "string"
                    }
                }
            }
        
+ Response 503 (application/json)
Service Unavailable. Try later.

    + Body
    
            {
                "code": "ServiceUnavailable",
                "message": "Service temporarily unavailable, please try again in few minutes"
            }
    
    + Schema

            {
                "type": "object",
                "properties": {
                    "code": {
                        "type": "string"
                    },
                    "message": {
                        "type": "string"
                    }
                }
            }

### Activate a voucher [POST /reseller/voucher/{voucher_id}/]

Activate a created voucher. After a voucher is created you need use this method for activate it to be it ready for use.
        
+ Parameters
    + voucher_id (required, string) ... Unique 36 hexadecimal long string.
    
+ Request
    + Headers

            Authorization: Basic ABC123


+ Response 201 (application/json)
The voucher was activated successfully.

    + Body

            {
                "activated": true
            }
        
    + Schema
    
            {
                "type": "object",
                "properties": {
                    "activated": {
                        "type": "boolean"
                    }
                }
            }

+ Response 401 (application/json)
Forbidden. Check Auth credentials.

    + Headers

            WWW-Authenticate: Basic realm="reseller"

    + Body
    
            {
                "code": "Unauthorized",
                "message": "Invalid username/password"
            }
            
    + Schema

            {
                "type": "object",
                "properties": {
                    "code": {
                        "type": "string"
                    },
                    "message": {
                        "type": "string"
                    }
                }
            }
            
+ Response 404 (application/json)
Not Found. The voucher code was not found.

    + Body
    
            {
                "code": "NotFound",
                "message": "The voucher was not found"
            }
            
    + Schema

            {
                "type": "object",
                "properties": {
                    "code": {
                        "type": "string"
                    },
                    "message": {
                        "type": "string"
                    }
                }
            }

+ Response 409 (application/json)
Conflict. Invalid argument. 
The error information will be as Object (key, value), where the key is the param name with the error and the value is an explanation of what was wrong. 
You can get multiple errors inside the *errors* object.

    type     | reason
    -------- | --------
    MISSING  | Field is required

    + Body
    
            {
              "code": "InvalidArgument",
              "message": "Validation failed",
              "errors": {
                "{{param}}": {
                  "type": "{{type}}",
                  "reason": "{{reason}}"
                }
              }
            }
            
    + Schema

            {
                "type": "object",
                "properties": {
                    "code": {
                        "type": "string"
                    },
                    "message": {
                        "type": "string"
                    },
                    "errors": {
                        "type": "object",
                        "properties": {
                            "{{param}}": {
                                "type": "object",
                                "properties": {
                                    "type": {
                                        "type": "string"
                                    },
                                    "reason": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        
+ Response 500 (application/json)
Internal Server Error. Contact with Tikebit.

    + Body
    
            {
                "code": "InternalServerError",
                "message": "Some critical error has occurred"
            }
            
    + Schema

            {
                "type": "object",
                "properties": {
                    "code": {
                        "type": "string"
                    },
                    "message": {
                        "type": "string"
                    }
                }
            }
        
+ Response 503 (application/json)
Service Unavailable. Try later.

    + Body
    
            {
                "code": "ServiceUnavailable",
                "message": "Service temporarily unavailable, please try again in few minutes"
            }
    
    + Schema

            {
                "type": "object",
                "properties": {
                    "code": {
                        "type": "string"
                    },
                    "message": {
                        "type": "string"
                    }
                }
            }

### Cancel a voucher [DELETE /reseller/voucher/{voucher_code}/]

Cancel a voucher. It can only be cancelled until 60 minutes after it was created. It is useful when a merchant creates a wrong voucher and he wants to cancel it immediately.

+ Parameters
    + voucher_code (required, string) ... Unique 16 digits long PIN code.

+ Request

    + Headers

            Authorization: Basic ABC123


+ Response 200 (application/json)
The voucher was cancelled successfully. You will get some details about cancellation.

    + Body

            {
                "id": "1c201e5f-519e-4035-86f8-231547cfc4a8",
                "creation_timestamp": 1494006670,
                "voucher_id": "13201ecd-509e-4015-86c8-211547cfc4a8"
            }
        
    + Schema
    
            {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "number"
                    },
                    "creation_timestamp": {
                        "type": "timestamp"
                    },
                    "voucher_id": {
                        "type": "number"
                    }
                }
            }
            
+ Response 400 (application/json)
Bad request.

    Posible messages            |
    --------------------------- |
    The voucher is not activated    |
    The voucher was used        |
    The voucher was already cancelled    |
    
   
    + Body

            {
                "code": "BadRequest",
                "message": "{message}"
            }
            
    + Schema

            {
                "type": "object",
                "properties": {
                    "code": {
                        "type": "string"
                    },
                    "message": {
                        "type": "string"
                    }
                }
            }

+ Response 401 (application/json)
Forbidden. Check Auth credentials.

    + Headers

            WWW-Authenticate: Basic realm="reseller"

    + Body
    
            {
                "code": "Unauthorized",
                "message": "Invalid username/password"
            }
            
    + Schema

            {
                "type": "object",
                "properties": {
                    "code": {
                        "type": "string"
                    },
                    "message": {
                        "type": "string"
                    }
                }
            }

+ Response 404 (application/json)
Not Found. The voucher code was not found.

    + Body
    
            {
                "code": "NotFound",
                "message": "The voucher code was not found"
            }
            
    + Schema

            {
                "type": "object",
                "properties": {
                    "code": {
                        "type": "string"
                    },
                    "message": {
                        "type": "string"
                    }
                }
            }

+ Response 409 (application/json)
Conflict. Invalid argument. 
The error information will be as Object (key, value), where the key is the param name with the error and the value is an explanation of what was wrong. 
You can get multiple errors inside the *errors* object.

    type     | reason
    -------- | --------
    INVALID  | Invalid characters

    + Body
    
            {
              "code": "InvalidArgument",
              "message": "Validation failed",
              "errors": {
                "{{param}}": {
                  "type": "{{type}}",
                  "reason": "{{reason}}"
                }
              }
            }
            
    + Schema

            {
                "type": "object",
                "properties": {
                    "code": {
                        "type": "string"
                    },
                    "message": {
                        "type": "string"
                    },
                    "errors": {
                        "type": "object",
                        "properties": {
                            "{{param}}": {
                                "type": "object",
                                "properties": {
                                    "type": {
                                        "type": "string"
                                    },
                                    "reason": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                }
            }

+ Response 500 (application/json)
Internal Server Error. Contact with Tikebit.

    + Body
    
            {
                "code": "InternalServerError",
                "message": "Some critical error has occurred"
            }
            
    + Schema

            {
                "type": "object",
                "properties": {
                    "code": {
                        "type": "string"
                    },
                    "message": {
                        "type": "string"
                    }
                }
            }
        
+ Response 503 (application/json)
Service Unavailable. Try later.

    + Body
    
            {
                "code": "ServiceUnavailable",
                "message": "Service temporarily unavailable, please try again in few minutes"
            }
    
    + Schema

            {
                "type": "object",
                "properties": {
                    "code": {
                        "type": "string"
                    },
                    "message": {
                        "type": "string"
                    }
                }
            }


# Group Merchant
Those methods are available for **merchant** accounts.

## Payment

Those methods allows create a payment (2 steps).

### Create a payment [POST /merchant/payment/]

Create a payment for a voucher. After the creation you need activate the voucher.
**CAUTION:** If you don't activate the payment, the amount not will be spent.


+ Attributes (object)
    + voucher_code: `1234123412341234` (required, string)
        Unique 16 digits long PIN code.
        
    + amount: 5000 (number, required)
        **Min:** 100 | **Max:** 10000
        
        The total amount of voucher. In cents.
    
    + currency_iso_code: `EUR` (string, required)
        Only ***EUR*** is available at this moment.
        
    + reference: `Unique ID` (string)
        **Max length:** 100.
        
        Optional. If is sent, must be an unique string.
    
    + description: `Extra info` (string)
        **Max length:** 250.
        
        Optional. Custom description.
    
+ Request

    + Headers

            Authorization: Basic ABC123

    + Body
    
            {
                "voucher_code": "1feb35d1-9ead-4cf6-b681-76d630367f90",
                "amount": 100,
                "currency_iso_code": "EUR",
                "reference": "MyCustomAndInternalID",
                "description": "Bit2Me.com - 1€ in bitcoins: REF445588"
            }
        
    + Schema

            {
                "type": "object",
                "properties": {
                    "voucher_code": {
                        "type": "string"
                    },
                    "amount": {
                        "type": "number"
                    },
                    "currency_iso_code": {
                        "type": "string"
                    },
                    "reference": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    }
                }
            }        
        

+ Response 201 (application/json)
The payment was created successfully.

    + Body
    
            {
                "id": "1feb35d1-9ead-4cf6-b681-76d630367f90",
                "creation_timestamp": 1462470876
                "amount": 100,
                "currency_iso_code": "EUR",
                "reference": "MyCustomAndInternalID",
                "description": "Bit2Me.com - 1€ in bitcoins: REF445588"
            }
            
    + Schema

            {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "creation_timestamp": {
                        "type": "timestamp"
                    },
                    "amount": {
                        "type": "number"
                    },
                    "currency_iso_code": {
                        "type": "string"
                    },
                    "reference": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    }
                }
            }

+ Response 400 (application/json)
Bad request.

    Posible messages             |
    -----------------------------|
    The voucher is not activated        |        
    The payment reference was already used    |
    Not enough voucher balance   | 
   
    + Body

            {
                "code": "BadRequest",
                "message": "{message}"
            }
            
    + Schema

            {
                "type": "object",
                "properties": {
                    "code": {
                        "type": "string"
                    },
                    "message": {
                        "type": "string"
                    }
                }
            }

+ Response 401 (application/json)
Forbidden. Check Auth credentials.

    + Headers

            WWW-Authenticate: Basic realm="merchant"

    + Body
    
            {
                "code": "Unauthorized",
                "message": "Invalid username/password"
            }

    + Schema

            {
                "type": "object",
                "properties": {
                    "code": {
                        "type": "string"
                    },
                    "message": {
                        "type": "string"
                    }
                }
            }

+ Response 404 (application/json)
Not Found. The voucher code was not found.

    + Body
    
            {
                "code": "NotFound",
                "message": "The voucher code was not found"
            }
            
    + Schema

            {
                "type": "object",
                "properties": {
                    "code": {
                        "type": "string"
                    },
                    "message": {
                        "type": "string"
                    }
                }
            }

+ Response 409 (application/json)
Conflict. Invalid argument. 
The error information will be as Object (key, value), where the key is the param name with the error and the value is an explanation of what was wrong. 
You can get multiple errors inside the *errors* object.

    type     | reason
    -------- | --------
    MISSING  | Field is required
    INVALID  | Invalid characters
    INVALID  | Invalid number
    INVALID  | Invalid integer

    + Body
    
            {
              "code": "InvalidArgument",
              "message": "Validation failed",
              "errors": {
                "{{param}}": {
                  "type": "{{type}}",
                  "reason": "{{reason}}"
                }
              }
            }
            
    + Schema

            {
                "type": "object",
                "properties": {
                    "code": {
                        "type": "string"
                    },
                    "message": {
                        "type": "string"
                    },
                    "errors": {
                        "type": "object",
                        "properties": {
                            "{{param}}": {
                                "type": "object",
                                "properties": {
                                    "type": {
                                        "type": "string"
                                    },
                                    "reason": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                }
            }

+ Response 500 (application/json)
Internal Server Error. Contact with Tikebit.

    + Body
    
            {
                "code": "InternalServerError",
                "message": "Some critical error has occurred"
            }
            
    + Schema

            {
                "type": "object",
                "properties": {
                    "code": {
                        "type": "string"
                    },
                    "message": {
                        "type": "string"
                    }
                }
            }
        
+ Response 503 (application/json)
Service Unavailable. Try later.

    + Body
    
            {
                "code": "ServiceUnavailable",
                "message": "Service temporarily unavailable, please try again in few minutes"
            }
    
    + Schema

            {
                "type": "object",
                "properties": {
                    "code": {
                        "type": "string"
                    },
                    "message": {
                        "type": "string"
                    }
                }
            }
            
### Activate a payment [POST /merchant/payment/{payment_id}/]

Activate a created payment. After a payment is created you need use this method for activate it to be it ready for count as used.

        
+ Parameters
    + payment_id (required, string) ... Unique 36 hexadecimal long string.
    
+ Request
    + Headers

            Authorization: Basic ABC123


+ Response 201 (application/json)
The payment was activated successfully.

    + Body

            {
                "activated": true
            }
        
    + Schema
    
            {
                "type": "object",
                "properties": {
                    "activated": {
                        "type": "boolean"
                    }
                }
            }

+ Response 401 (application/json)
Forbidden. Check Auth credentials.

    + Headers

            WWW-Authenticate: Basic realm="reseller"

    + Body
    
            {
                "code": "Unauthorized",
                "message": "Invalid username/password"
            }
            
    + Schema

            {
                "type": "object",
                "properties": {
                    "code": {
                        "type": "string"
                    },
                    "message": {
                        "type": "string"
                    }
                }
            }
            
+ Response 404 (application/json)
Not Found. The payment was not found.

    + Body
    
            {
                "code": "NotFound",
                "message": "The payment was not found"
            }
            
    + Schema

            {
                "type": "object",
                "properties": {
                    "code": {
                        "type": "string"
                    },
                    "message": {
                        "type": "string"
                    }
                }
            }

        
+ Response 500 (application/json)
Internal Server Error. Contact with Tikebit.

    + Body
    
            {
                "code": "InternalServerError",
                "message": "Some critical error has occurred"
            }
            
    + Schema

            {
                "type": "object",
                "properties": {
                    "code": {
                        "type": "string"
                    },
                    "message": {
                        "type": "string"
                    }
                }
            }
        
+ Response 503 (application/json)
Service Unavailable. Try later.

    + Body
    
            {
                "code": "ServiceUnavailable",
                "message": "Service temporarily unavailable, please try again in few minutes"
            }
    
    + Schema

            {
                "type": "object",
                "properties": {
                    "code": {
                        "type": "string"
                    },
                    "message": {
                        "type": "string"
                    }
                }
            }